<?php
/*
* edit this file, if you want to make changes to tokenizer for manchester syntax
*/
require_once 'manchester.php';
class ManchesterLexer
{
	private $data;
	private $N;
	public $token;
	public $value;
    public $line;
	private $debug = 1;
	
    function __construct($data)
    {
        $this->data = $data;
        $this->N = 0;
//        $this->line = 1;
    }


	public function printout($text="nothing"){
		if($this->debug){
			echo $text." \n";
		}
	}

/*!lex2php
%input $this->data
%counter $this->N
%token $this->token
%value $this->value
%line $this->line
%longestmatch 1
%matchlongest 1
ALPHANUMERIC = /[a-zA-Z]+[0-9]*/
NUMERIC = /[0-9]+/
WHITESPACE = /[ \t]+/
LPAREN=/\(/
RPAREN=/\)/
NOT_OPERATOR=/[Nn][Oo][Tt]/
AND_OPERATOR=/[Aa][Nn][Dd]|[Tt][Hh][Aa][Tt]/
OR_OPERATOR=/[Oo][Rr]/
COMMA=/,/
LSQUAREBRACKET=/\[/
RSQUAREBRACKET=/\]/
LBRACE=/\{/
RBRACE=/\}/
MIN_OPERATOR=/[Mm][Ii][Nn]/
MAX_OPERATOR=/[Mm][Aa][Xx]/
EXACTLY_OPERATOR=/[Ee][Xx][Aa][Cc][Tt][Ll][Yy]/
HAS_OPERATOR=/[Hh][Aa][Ss]/
ONLYSOME_OPERATOR=/[Oo][Nn][Ll][Yy][Ss][Oo][Mm][Ee]/
ONLY_OPERATOR=/[Oo][Nn][Ll][Yy]/
SOME_OPERATOR=/[Ss][Oo][Mm][Ee]/
NEKUDOTAYIM=/:/
*/
/*!lex2php
%statename START
WHITESPACE {
	$this->printout("whitespace");
    return false; // skip this token (do not return it)
}
OR_OPERATOR{
	$this->printout("or");
	$this->token=OWLParser::OR_OPERATOR;
}
AND_OPERATOR{
	$this->printout("and");
	$this->token=OWLParser::AND_OPERATOR;
}
NOT_OPERATOR {
	$this->printout("not");
	$this->token=OWLParser::NOT_OPERATOR;
}
MIN_OPERATOR{
	$this->printout("min");
	$this->token=OWLParser::MIN_OPERATOR;
}
MAX_OPERATOR {
	$this->printout("max");
	$this->token=OWLParser::MAX_OPERATOR;
}
EXACTLY_OPERATOR{
	$this->printout("exactly");
	$this->token=OWLParser::EXACTLY_OPERATOR;
}
HAS_OPERATOR {
	$this->printout("has");
	$this->token=OWLParser::HAS_OPERATOR;
}
ONLYSOME_OPERATOR{
	$this->printout("onlysome");
	$this->token=OWLParser::ONLYSOME_OPERATOR;
}
SOME_OPERATOR {
	$this->printout("some");
	$this->token=OWLParser::SOME_OPERATOR;
}
ONLY_OPERATOR {
	$this->printout("only");
	$this->token=OWLParser::ONLY_OPERATOR;
}
COMMA{
	$this->printout("comma");
	$this->token=OWLParser::COMMA;
}
LPAREN {
	$this->printout("lparen");
	$this->token=OWLParser::LPAREN;
}
RPAREN {
	$this->printout("rparen");
	$this->token=OWLParser::RPAREN;
}
LBRACE {
	$this->printout("lbrace");
	$this->token=OWLParser::LBRACE;
}
RBRACE {
	$this->printout("rbrace");
	$this->token=OWLParser::RBRACE;
}
LSQUAREBRACKET{
	$this->printout("lsquarebracket");
	$this->token=OWLParser::LSQUAREBRACKET;
}
RSQUAREBRACKET{
	$this->printout("rsquarebracket");
	$this->token=OWLParser::RSQUAREBRACKET;
}
NUMERIC{
	$this->printout("numeric");
	$this->token=OWLParser::NUMERIC;
}
ALPHANUMERIC NEKUDOTAYIM ALPHANUMERIC{
	$this->printout("alphanumeric:alphanumeric");
	$this->token=OWLParser::ALPHANUMERIC;
}
ALPHANUMERIC{
	$this->printout("alphanumeric");
	$this->token=OWLParser::ALPHANUMERIC;
}
*/
}